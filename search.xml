<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[爬虫-访问网站数据并保存在对应文件.md]]></title>
    <url>%2FSonicHuang%2F183747d7%2F</url>
    <content type="text"><![CDATA[题目：访问网址读取数据并保存在对应的文本文件里 我的代码：12345678910111213141516171819'''此脚本通过读取urls.txt上的网站的信息，并保存在对应的文本文件里。'''import urllib.request as urimport chardet as chdef main(): with open('urls.txt') as file: urls = file.readlines()#分行读取 n = 0 for url in urls: sources = ur.urlopen(url).read() code = ch.detect(sources)['encoding']#检测网站的编码方式 html = sources.decode(code)#对网站信息进行相应的解码,decode默认的是encoding = 'utf-8'的编码 n += 1 filename = ''.join(['file_', str(n), '.txt'])#生成对应的文件 with open(filename, 'w', encoding = code) as nfile:#再用相应的编码写入对应的文件，encoding默认的编码是utf-8 nfile.write(html)if __name__ == '__main__': main() 老师的代码：123456789101112131415161718192021222324252627282930'''读取网站信息并保存在对应的文件里。老师的方法与我的相似，不同之处，读取网站信息时使用了分割换行符的方法'''import urllib.requestimport chardetdef main(): i = 0 with open("urls.txt", "r") as f: # 读取待访问的网址 # 由于urls.txt每一行一个URL # 所以按换行符'\n'分割 urls = f.read().splitlines() for each_url in urls: response = urllib.request.urlopen(each_url) html = response.read() # 识别网页编码 encode = chardet.detect(html)['encoding'] if encode == 'GB2312': encode = 'GBK' i += 1 filename = "url_%d.txt" % i #老师用了格式化，我用了join的方法 with open(filename, "w", encoding=encode) as each_file: each_file.write(html.decode(encode, "ignore")) #decode的第二个参数。对于有些字符的特殊编码方式，我们可以通过这个方式进行忽略,详细请参考后面链接。if __name__ == "__main__": main() 以下内容参考：Python中解码decode()与编码encode()与错误处理UnicodeDecodeError: ‘gbk’ codec can’t decode byte 0xab 使用python的时候经常会遇到文本的编码与解码问题，其中很常见的一种解码错误如题目所示，下面介绍该错误的解决方法，将‘gbk’换成‘utf-8’也适用。（1）、首先在打开文本的时候，设置其编码格式，如：open(‘1.txt’,encoding=’gbk’)；（2）、若（1）不能解决，可能是文本中出现的一些特殊符号超出了gbk的编码范围，可以选择编码范围更广的‘gb18030’，如：open(‘1.txt’,encoding=’gb18030’)；（3）、若（2）仍不能解决，说明文中出现了连‘gb18030’也无法编码的字符，可以使用‘ignore’属性进行忽略，如：open(‘1.txt’,encoding=’gb18030’，errors=‘ignore’)； （4）、还有一种常见解决方法为open(‘1.txt’).read().decode(‘gb18030’,’ignore’ 总结： 复习了文件的读取与写入 decode 与 encode urllib 与 chardet]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>chardet</tag>
        <tag>urllib</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[爬虫-编码检测应用.md]]></title>
    <url>%2FSonicHuang%2Fbd5cd896%2F</url>
    <content type="text"><![CDATA[上一篇我们安装编码检测工具chardet, 小甲鱼老师有道题要求用户输入任意网址，我们通过脚本判断出该网站使用的编码方式。 题目演示： 下面是我的代码：123456789101112131415161718192021222324252627282930'''本脚本是利用文本编码检测工具chardet检测用户输入的网站所使用的编码。'''import urllib.request as urimport chardet as ch#定义一个函数用于接收网站数据def source(): url = input('Please input the URL you want to detect: ') try:#检测用户输入的网址是否正确 content = ur.urlopen(url).read() except: print('The URL is wrong or it\'s not available.') else: return content#检测网站的编码def detect(): try:#如果用户输入的网址有问题这里就会抛出异常，为了使脚本运行正常，这里进行了处理，并提示用户。 sources = source() result = ch.detect(sources) except: print('You should restart the application again.') else: result = result['encoding'] if result == 'GB2312': result = 'GBK' print('The encoding way is %s.' % result)#如果作为单独脚本运行时if __name__ == '__main__': detect() 参考关于GB2312 和 GBK 总结： 要注意 1__name__ == '__main__': 的使用]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>chardet</tag>
        <tag>urllib</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Python中安装编码检测工具chardet]]></title>
    <url>%2FSonicHuang%2Fb9b1e485%2F</url>
    <content type="text"><![CDATA[在Github建好博客后开始学习新的一章，爬虫，首先需要安装一个检测网页代码编码的工具chardet. 参考chardet官网 1. pip 安装在cmd输入命令 1pip install chardet 2. 使用detect()模块检测在IDLE 12345&gt;&gt;&gt; import urllib.request as ur&gt;&gt;&gt; respond = ur.urlopen('https://sonichuang.github.io')&gt;&gt;&gt; import chardet&gt;&gt;&gt; chardet.detect(respond.read())&#123;'encoding': 'utf-8', 'confidence': 0.99, 'language': ''&#125; 意思百分之九十九是utf-8, 还可以检测字符串的语言，如：中文，英文等]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
        <tag>chardet</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[在Github博客加入博客背景 评论功能以及修改侧栏]]></title>
    <url>%2FSonicHuang%2F2be1fd41%2F</url>
    <content type="text"><![CDATA[一.加入博客背景1. 找到主博客\themes\next\source\css_custom下custom.styl文件，原始文件里面是空白的，用记事本打开然后添加如下文本。 123456789101112131415// Custom styles.@media screen and (min-width:1200px) &#123; body &#123; background-image:url(/images/backgroundpicturename.jpg); background-repeat: no-repeat; background-attachment:fixed; background-position:50% 50%; background-size: cover &#125; #footer a &#123; color:#eee; &#125;&#125; 注意上面url后面括号里面内容。 2.把需要的背景图片放在\themes\next\source\images文件夹里然后把图片名称填入步骤1，url后面backgroundpicturename,注意扩展名例子是jpg, 要根据实际情况修改。3. 部署后就可以看到我们的背景了。我把图片进行了修改，在图片编辑器里面修改他的像素为电脑屏幕的实际像素值。 4. 如果感觉背景图片会挡住博客上的字可以调节，图片的透明度。在步骤1的文件中下面加入如下代码，12345//background color and opacity.main-inner &#123; background: #fff; opacity: 0.9;&#125; background后面的值是颜色代码，这里是白色。opacity是指透明度。这里可以根据需要进行调整。 二. 加入评论功能1.网上推荐使用LiveRe, 在其主页申请一个免费帐号，再Install(安装)，city(一般网站)就可以得到一串代码注意data-uid后面引号里面的字符串。 2.再打开主目录下\themes\next的配置文件_config.yml文件找到如下内容，然后在your uid后面填上步骤1的字符串，注意不要引号，并去掉livere uid前面的#。部署好就可以了。 三. 修改侧栏目录的显示在打开某一个文章的时候，侧栏老是在显示（下图一）如果想把隐藏掉。可以这样修改，在主目录下主题的配置文件\themes\next， _config.yml中sidebar display中在post值那里最前面加上#, 再去掉hide前的#, 就可以了（如下图二） 总结：修改博客背景，添加评论功能，修改侧栏目录的显示方式]]></content>
      <categories>
        <category>github pages</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github pages</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[如何在Typora中插入本地图片和加入Readmore按钮]]></title>
    <url>%2FSonicHuang%2F58b77a70%2F</url>
    <content type="text"><![CDATA[第一部分：插入本地图片我现在遇到的问题是：在用Typora编辑MD时，插入本地图片后，不能在网页上显示, 只能看到空白的方框。 我的博客是用Hexo搭建，使用next主题，用的windows系统，苹果电脑有个专门的软件叫ipic听说很好用，但是windows却没有。图片不能显示的原因是：本地插入的图片在Typora本地是图片的绝对地址，部署到网站后，还是显示的绝对路径，很明显，系统找不到这个地址，也就不能显示图片了。解决的方法在网上也是很多，比如安装插件，修改配置文件等等，我觉得太复杂，其实最简单的办法只要简单的几步: 1. 在博客根目录下&gt;source下新建一个assets文件夹。 2.在Typora&lt;File&lt;Preference选择如下： a. 第一个拷贝图片到指定文件夹b. 第二个选择步骤1的assets文件夹，意思是拖放到Typora中的图片会自动复制到这个assets文件夹。c. 第三，四指适用于拖入的本地图片和网络图片都会复制到assets文件夹d. 第五，使用相对路径3. 在Typora&lt;Edit&lt;Image Tools&lt;Use Image Root Path在这里选择储存图片的根目录，定位到步骤1的source文件夹，不能定位到放图片的assets文件夹，我之前就把这步弄错了，导致网站上不能显示图片。定位好后会在Typora的MD文件头里面出现如图的语句： 4.设置好了后就就可以插入图片了，显示的是图片的相对路径。 5. 部署后就能在网站正确显示了。第二部分：在博客首页加入Readmore按钮有两个办法： 1. 手动添加（推荐），在MD文中的适当位置重启一行纯文本写入如下图这一行，系统就会自动在首页显示之前的内容 2. 自动添加。在主题文件夹的配置文件\themes\next下面_config.yml，中找到如下代码： 实际上官方推荐使用手动加入Readmore按钮。因为自动添加会让文章看起来不人性化, 会出现突然在某个地方咔嚓一下断掉的感觉。另外如果同时设置的手动和自动，会优先在手动的地方显示。 总结：1. 网络上的方法不一定适合自己，所以需要不断试错。2. 不要轻易放弃。3. 本文章解决了Typora编写MD后部署到Github后图片显示不正常的问题以及加入Readmore按钮的方法。本文参考：关于Typora和hexo图片路径的问题]]></content>
      <categories>
        <category>github pages</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>typora</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[更新安卓平板固件]]></title>
    <url>%2FSonicHuang%2F379f2134%2F</url>
    <content type="text"><![CDATA[本篇文章单纯为了记录安卓平板固件的更新过程。 之前为了让小孩子的英语作业能够一天多做一点，而寻求通过一些方法修改安卓app的对于时间上的限制，想了很多办法想让平板ROOT后，获取更多的权限。但是最终下载下来的固件，通过Odin重装后机子都无法正常启动。最后看到网上有人讲SM T700的平板升级到这个安卓版本6.0.1后几乎没有办法ROOT，而且后来得知App是部署在服务器上的，没有办法通过修改App的程序改变限制。 但是现在机子几乎变砖，怎么也要把它救过来。 1. 下载平板对应版本的固件。固件下载地址 2. 下载Odin官方下载地址 3. 在AP处添加步骤1的文件，其他参数不用修改。4. 按住平板电源键，音量下键，和Home键几秒中就可以看到下载模式，再按音量上键就开始启动下载。5. 用数据线连接平板和电脑，然后点击Odin3， Start.6. 直到平板安装完成重启，Odin3显示Pass，结束。 结束语：1.第一次使用Typora编辑MD文档，感觉很方便，比想象的更方便。但是现在还有一个问题没有解决，就是在Typora中插入本地的图片然后部署后能够正确的显示。2. 三星平板真难用，按照上面的步骤更新后发现还是启动不了，后来再启动Recovery模式，按住电源键，音量上键和Home。恢复到出厂设置才解决问题。3. 遇到困难的时候，在将要放弃的时候再坚持一下，问题就解决了。]]></content>
      <categories>
        <category>others</category>
      </categories>
      <tags>
        <tag>android</tag>
        <tag>ROM</tag>
        <tag>Record</tag>
      </tags>
  </entry>
</search>
